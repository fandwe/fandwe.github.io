<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fandwe</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-12T02:16:45.266Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>fandongwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sublime text3配置Java环境</title>
    <link href="http://yoursite.com/2018/01/24/sublime-text3%E9%85%8D%E7%BD%AEjava%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/01/24/sublime-text3配置java环境/</id>
    <published>2018-01-23T16:00:00.000Z</published>
    <updated>2018-04-12T02:16:45.266Z</updated>
    
    <content type="html"><![CDATA[<p>当jdk和sublime都安装完以后就可以进行下面的步骤了：</p><p>一、新建runJava.bat文件</p><a id="more"></a><p>输入下面的内容，保存为runJava.bat文件。</p><p>@ECHO OFF<br>cd %~dp1<br>ECHO Compiling %~nx1……<br>IF EXIST %~n1.class (<br>DEL %~n1.class<br>)<br>javac %~nx1<br>IF EXIST %~n1.class (<br>ECHO ———OUTPUT———<br>java %~n1<br>)<br>将这个文件复制到JDK的bin目录下</p><p>二、修改JavaC.sublime-build文件</p><p>在安装目录(E:\Sublime Text 3\Packages)找到Java.sublime-package，解压找到JavaC.sublime-build文件按照如下修改：</p><p>{<br>“shell_cmd”: “runJava.bat \”$file\””,<br>“file_regex”: “^(…<em>?):([0-9]</em>):?([0-9]*)”,<br>“selector”: “source.java”,<br>“encoding”: “GBK”<br>}</p><p>三、java代码路径添加到CLASSPATH里面去<br>假设java类都放在E:\Application\sublime\workspace\java下的，添加CLASSPATH变量E:\Application\sublime\workspace\java;</p><p>经过上面的配置过后，我们发现能够正常编译和运行java代码了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当jdk和sublime都安装完以后就可以进行下面的步骤了：&lt;/p&gt;
&lt;p&gt;一、新建runJava.bat文件&lt;/p&gt;
    
    </summary>
    
      <category term="Sublime" scheme="http://yoursite.com/categories/Sublime/"/>
    
    
      <category term="Sublime Java" scheme="http://yoursite.com/tags/Sublime-Java/"/>
    
  </entry>
  
  <entry>
    <title>Java集合ArrayList的内部实现</title>
    <link href="http://yoursite.com/2017/06/04/Java%E9%9B%86%E5%90%88ArrayList%E7%9A%84%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2017/06/04/Java集合ArrayList的内部实现/</id>
    <published>2017-06-03T16:00:00.000Z</published>
    <updated>2018-04-12T00:38:07.771Z</updated>
    
    <content type="html"><![CDATA[<p>1、定义初始长度、定义一个可变长度、定义一个数组；</p><p>2、初始：数组长度为0，可变长度为0</p><p>3、有一个改变长度的方法，防溢出，防不足</p><p>4、未实现Iterable接口<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">public  class MyList &lt;AnyType&gt; &#123;  </span><br><span class="line">      </span><br><span class="line">    private int theSize;//记录数组的长度  </span><br><span class="line">    private AnyType [] theItems;//可变数组，保留数据  </span><br><span class="line">      </span><br><span class="line">    private void doClear()&#123;//初始化数组，清空链表  </span><br><span class="line">        theSize=0;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public MyList()&#123;//构造方法，初始化数组  </span><br><span class="line">        doClear();  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void clear()&#123;//外部可调用的清空方法  </span><br><span class="line">        doClear();  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public int size()&#123;//获取长度  </span><br><span class="line">        return theSize;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public boolean isEmpty()&#123;//判断是否为空  </span><br><span class="line">        return theSize==0;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void trimTosize()&#123;//将此 ArrayList 实例的容量调整为列表的当前大小。  </span><br><span class="line">        ensureCapacity(size());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    public AnyType get(int idx)&#123;//获取某个位置上的值  </span><br><span class="line">        if (idx&lt;0||idx&gt;=size())  </span><br><span class="line">            throw new ArrayIndexOutOfBoundsException();  </span><br><span class="line">        return theItems[idx];  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public AnyType set(int idx,AnyType newVal)&#123;//修改指定位置上的值  </span><br><span class="line">        if (idx&lt;0||idx&gt;=size())  </span><br><span class="line">            throw new ArrayIndexOutOfBoundsException();  </span><br><span class="line">        AnyType old=theItems[idx];  </span><br><span class="line">        theItems[idx]=newVal;  </span><br><span class="line">        return old;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void ensureCapacity(int newCapacity) &#123;//增加数组的长度  </span><br><span class="line">        if (newCapacity&lt;theSize)  </span><br><span class="line">            return;  </span><br><span class="line">        AnyType []old=theItems;//将原始数组中的值保存  </span><br><span class="line">        theItems=(AnyType[])new Object[newCapacity];  </span><br><span class="line">        for (int i=0;i&lt;size();i++)  </span><br><span class="line">            theItems[i]=old[i];  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public boolean add(AnyType x)&#123;//在末尾添加数值  </span><br><span class="line">        add(size(),x);  </span><br><span class="line">        return true;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void add(int idx,AnyType x)&#123;//在指定位置添加数值  </span><br><span class="line">        if (theItems.length==size())  </span><br><span class="line">            ensureCapacity(size()*2+1);  </span><br><span class="line">        for (int i=theSize;i&gt;idx;i--)&#123;  </span><br><span class="line">            theItems[i]=theItems[i-1];  </span><br><span class="line">        &#125;  </span><br><span class="line">        theItems[idx]=x;  </span><br><span class="line">        theSize++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public AnyType remove(int idx)&#123;//删除指定位置上的值  </span><br><span class="line">        AnyType removedItem=theItems[idx];  </span><br><span class="line">        for (int i=idx;i&lt;size()-1;i++)&#123;  </span><br><span class="line">            theItems[i]=theItems[i+1];  </span><br><span class="line">        &#125;  </span><br><span class="line">        theSize--;  </span><br><span class="line">        return removedItem;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、定义初始长度、定义一个可变长度、定义一个数组；&lt;/p&gt;
&lt;p&gt;2、初始：数组长度为0，可变长度为0&lt;/p&gt;
&lt;p&gt;3、有一个改变长度的方法，防溢出，防不足&lt;/p&gt;
&lt;p&gt;4、未实现Iterable接口&lt;br&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://yoursite.com/categories/JavaSE/"/>
    
    
      <category term="ArrayList" scheme="http://yoursite.com/tags/ArrayList/"/>
    
  </entry>
  
  <entry>
    <title>Java排序中的自定义比较器</title>
    <link href="http://yoursite.com/2017/05/26/java%E6%AF%94%E8%BE%83%E5%99%A8/"/>
    <id>http://yoursite.com/2017/05/26/java比较器/</id>
    <published>2017-05-25T16:00:00.000Z</published>
    <updated>2018-04-12T00:45:56.504Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个类实现Comparator接口</p><p>在sort()方法中调用此类</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public class Comp &#123;</span><br><span class="line"></span><br><span class="line">int a;</span><br><span class="line">int b;</span><br><span class="line">//构造函数</span><br><span class="line">public Comp(int a, int b) &#123;</span><br><span class="line">this.a=a;</span><br><span class="line">this.b=b;</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//创建对象数组</span><br><span class="line">Comp []comp=new Comp[]&#123;new Comp(1,3),new Comp(2, 2),new Comp(0, 4)&#125;;</span><br><span class="line">//调用比较器</span><br><span class="line">Arrays.sort(comp,new A());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//创建比较器A，A为按a的升序排序</span><br><span class="line">class A implements Comparator&lt;Comp&gt;&#123;</span><br><span class="line"></span><br><span class="line">public int compare(Comp comp1,Comp comp2) &#123;</span><br><span class="line">return comp1.a-comp2.a;//按a的升序</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;创建一个类实现Comparator接口&lt;/p&gt;
&lt;p&gt;在sort()方法中调用此类&lt;/p&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://yoursite.com/categories/JavaSE/"/>
    
    
      <category term="Comparator" scheme="http://yoursite.com/tags/Comparator/"/>
    
  </entry>
  
</feed>
