<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fandwe</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-12T07:10:58.575Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>fandongwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Socket网络编程——实现登录注册、上传文件到服务器</title>
    <link href="http://yoursite.com/2018/04/09/Socket%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E2%80%94%E2%80%94%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2018/04/09/Socket网络编程——实现登录注册上传文件到服务器/</id>
    <published>2018-04-08T16:00:00.000Z</published>
    <updated>2018-04-12T07:10:58.575Z</updated>
    
    <content type="html"><![CDATA[<p>慕课网Socket最后的项目，实现登录注册、文件上传。</p><p>代码中用到了Socket，Mysql，JDBC, I/O等技术。</p><p>参考视频中给出的部分代码，参考网上的一些博客，加上自己的一些联想所写出的，可能会出一些错误(目前自己运行并未出现，除了上传的文件过于大可能报错之外)。</p><a id="more"></a><p>先放一下包类目录<br><img src="https://img-blog.csdn.net/2018041215005189?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0dvZF9W/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>放几个比较复杂的类：<br>FileServer类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public class FileServer &#123;  </span><br><span class="line">    private Connection connection=null;  </span><br><span class="line">    private PreparedStatement preparedStatement=null;  </span><br><span class="line">    private ResultSet resultSet=null;  </span><br><span class="line">      </span><br><span class="line">    //将文件上传到服务器  </span><br><span class="line">    public boolean save(File file)&#123;  </span><br><span class="line">        String sql=&quot;insert into tb_file (fname,fcontent) values(?,?)&quot;;//上传语句  </span><br><span class="line">        String sql2=&quot;select * from tb_file where fname=?&quot;;//搜索一下上传的文件名，判断是否上传成功  </span><br><span class="line">        connection=DButil.getConnection();  </span><br><span class="line">        try &#123;  </span><br><span class="line">            preparedStatement=(PreparedStatement) connection.prepareStatement(sql);  </span><br><span class="line">            preparedStatement.setString(1, file.getFname());  </span><br><span class="line">            preparedStatement.setBytes(2,file.getFcontent());  </span><br><span class="line">            preparedStatement.execute();  </span><br><span class="line">            preparedStatement=(PreparedStatement) connection.prepareStatement(sql2);  </span><br><span class="line">            preparedStatement.setString(1, file.getFname());  </span><br><span class="line">            resultSet=preparedStatement.executeQuery();  </span><br><span class="line">            if (resultSet.next())&#123;//上传成功  </span><br><span class="line">                return true;  </span><br><span class="line">            &#125;  </span><br><span class="line">              </span><br><span class="line">        &#125; catch (SQLException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">        return false;//上传失败  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>UserServer类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">public class UserServer &#123;  </span><br><span class="line">    private Connection connection=null;  </span><br><span class="line">    private PreparedStatement preparedStatement=null;  </span><br><span class="line">    private ResultSet resultSet=null;  </span><br><span class="line">      </span><br><span class="line">    //用户登录判断  </span><br><span class="line">    public boolean login(User user)&#123;  </span><br><span class="line">        String sql=&quot;select * from tb_user where uname=? and upassword=?&quot;;  </span><br><span class="line">        connection=DButil.getConnection();  </span><br><span class="line">        try &#123;  </span><br><span class="line">            preparedStatement=(PreparedStatement) connection.prepareStatement(sql);  </span><br><span class="line">            preparedStatement.setString(1, user.getUname());  </span><br><span class="line">            preparedStatement.setString(2, user.getUpassword());  </span><br><span class="line">            preparedStatement.execute();  </span><br><span class="line">            resultSet=preparedStatement.executeQuery();//若用户名密码正确，resultSet为真  </span><br><span class="line">            if (resultSet.next())&#123;//登陆成功  </span><br><span class="line">                return true;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; catch (SQLException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;     </span><br><span class="line">        return false;//登录失败  </span><br><span class="line">    &#125;  </span><br><span class="line">    //判断此用户名是否存在  </span><br><span class="line">    public boolean doRegister(User user)&#123;  </span><br><span class="line">        String sql=&quot;select *from tb_user where uname=?&quot;;  </span><br><span class="line">        connection=DButil.getConnection();  </span><br><span class="line">        try &#123;  </span><br><span class="line">            preparedStatement=(PreparedStatement) connection.prepareStatement(sql);  </span><br><span class="line">            preparedStatement.setString(1, user.getUname());  </span><br><span class="line">            preparedStatement.execute();  </span><br><span class="line">            resultSet=preparedStatement.executeQuery();  </span><br><span class="line">            if (resultSet.next())&#123;  </span><br><span class="line">                return true;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; catch (SQLException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">        return false;  </span><br><span class="line">    &#125;  </span><br><span class="line">    //用户注册  </span><br><span class="line">    public boolean register(User user)&#123;  </span><br><span class="line">          </span><br><span class="line">        if (doRegister(user))&#123;  </span><br><span class="line">            return false;  </span><br><span class="line">        &#125;else&#123;  </span><br><span class="line">            String sql=&quot;insert into tb_user(uname,upassword) values (?,?)&quot;;  </span><br><span class="line">            connection=DButil.getConnection();  </span><br><span class="line">            try &#123;  </span><br><span class="line">                preparedStatement=(PreparedStatement) connection.prepareStatement(sql);  </span><br><span class="line">                preparedStatement.setString(1, user.getUname());  </span><br><span class="line">                preparedStatement.setString(2, user.getUpassword());  </span><br><span class="line">                preparedStatement.execute();  </span><br><span class="line">            &#125; catch (SQLException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;  </span><br><span class="line">            return true;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ServerThread类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">public class ServerThread extends Thread &#123;  </span><br><span class="line">    private Socket socket=null;  </span><br><span class="line">    private ObjectOutputStream objectOutputStream=null;//对象输入流  </span><br><span class="line">    private ObjectInputStream objectInputStream=null;//对象输出流  </span><br><span class="line">    private UserServer myuser=new UserServer();//用户业务对象  </span><br><span class="line">    private FileServer myfile=new FileServer();//文件业务对象  </span><br><span class="line">      </span><br><span class="line">    //初始化socket  </span><br><span class="line">    public ServerThread(Socket socket) &#123;  </span><br><span class="line">        this.socket=socket;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void run()&#123;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            objectInputStream=new ObjectInputStream(socket.getInputStream());  </span><br><span class="line">            objectOutputStream=new ObjectOutputStream(socket.getOutputStream());  </span><br><span class="line">            CommandTransfer commandTransfer=(CommandTransfer) objectInputStream.readObject();  </span><br><span class="line">            commandTransfer=execute(commandTransfer);//执行客户端操作指令  </span><br><span class="line">            objectOutputStream.writeObject(commandTransfer);//响应客户端  </span><br><span class="line">        &#125; catch (IOException | ClassNotFoundException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">    &#125;  </span><br><span class="line">    /* </span><br><span class="line">     * 执行客户端发送到服务端的指令 </span><br><span class="line">     */  </span><br><span class="line">  </span><br><span class="line">    private CommandTransfer execute(CommandTransfer commandTransfer) &#123;  </span><br><span class="line">        String cmd=commandTransfer.getCmd();//获得操作命令  </span><br><span class="line">        if (cmd.equals(&quot;login&quot;))&#123;//用户登录  </span><br><span class="line">            User user=(User) commandTransfer.getData();//获得操作命令中数据  </span><br><span class="line">            boolean flag=myuser.login(user);//登录成功flag为true  </span><br><span class="line">            commandTransfer.setFlag(flag);//设置命令的flag值  </span><br><span class="line">            if (flag)&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;登录成功！&quot;);  </span><br><span class="line">            &#125;else&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;用户名或密码不正确！&quot;);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;else if(cmd.equals(&quot;register&quot;))&#123;//用户注册  </span><br><span class="line">            User user=(User)commandTransfer.getData();  </span><br><span class="line">            boolean flag=myuser.register(user);  </span><br><span class="line">            commandTransfer.setFlag(flag);  </span><br><span class="line">            if (flag)&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;注册成功，请登录&quot;);  </span><br><span class="line">            &#125;else&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;注册失败,此用户名已存在！&quot;);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;else&#123;//文件上传  </span><br><span class="line">            File file=(File) commandTransfer.getData();  </span><br><span class="line">            boolean flag=myfile.save(file);  </span><br><span class="line">            commandTransfer.setFlag(flag);  </span><br><span class="line">            if (flag)&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;上传成功！&quot;);  </span><br><span class="line">            &#125;else&#123;  </span><br><span class="line">                commandTransfer.setResult(&quot;上传失败！&quot;);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        return commandTransfer;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StartServer类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class StartServer &#123;  </span><br><span class="line">    private static ServerSocket serverSocket=null;  </span><br><span class="line">  </span><br><span class="line">    public static void main(String[] args) &#123;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            //创建一个服务器socket，并绑定监听端口  </span><br><span class="line">            serverSocket = new ServerSocket(8888);  </span><br><span class="line">            Socket socket=null;  </span><br><span class="line">            System.out.println(&quot;****服务端已经启动****&quot;);  </span><br><span class="line">            //循环监听客户端的链接  </span><br><span class="line">            while (true)&#123;  </span><br><span class="line">                //调用accept方法监听  </span><br><span class="line">                socket=serverSocket.accept();  </span><br><span class="line">                ServerThread serverThread=new ServerThread(socket);  </span><br><span class="line">                serverThread.start();  </span><br><span class="line">            &#125;  </span><br><span class="line">              </span><br><span class="line">        &#125; catch (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>SocketClient类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line">public class SocketClient &#123;  </span><br><span class="line">    private Scanner in=new Scanner(System.in);  </span><br><span class="line">    private Socket socket=null;  </span><br><span class="line">    //主菜单  </span><br><span class="line">    public void showMenu()&#123;  </span><br><span class="line">        System.out.println(&quot;*****欢迎使用文件上传器*****&quot;);  </span><br><span class="line">        System.out.println(&quot;1、登录\n2、注册\n3、退出&quot;);  </span><br><span class="line">        System.out.println(&quot;**********************&quot;);  </span><br><span class="line">        System.out.println(&quot;请选择:&quot;);  </span><br><span class="line">        int choice=in.nextInt();  </span><br><span class="line">        switch (choice) &#123;  </span><br><span class="line">        case 1:  </span><br><span class="line">            clientLogin();  </span><br><span class="line">            break;  </span><br><span class="line">        case 2:  </span><br><span class="line">            clientRegister();  </span><br><span class="line">            break;  </span><br><span class="line">        case 3:  </span><br><span class="line">            System.out.println(&quot;再见，感谢您对本系统的支持！&quot;);  </span><br><span class="line">            System.exit(0);  </span><br><span class="line">            break;  </span><br><span class="line">        default:  </span><br><span class="line">            System.out.println(&quot;输入有误！&quot;);  </span><br><span class="line">            System.exit(0);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    //用户登录  </span><br><span class="line">    private void clientLogin() &#123;  </span><br><span class="line">        User user=new User();//创建用户实例  </span><br><span class="line">        CommandTransfer commandTransfer=new CommandTransfer();//创建命令实例  </span><br><span class="line">        int count=0;  </span><br><span class="line">        while (true)&#123;  </span><br><span class="line">            count++;  </span><br><span class="line">            if (count&gt;3)&#123;  </span><br><span class="line">                System.out.println(&quot;你已经连续三次登录失败，系统退出！&quot;);  </span><br><span class="line">                System.exit(0);  </span><br><span class="line">            &#125;  </span><br><span class="line">            in.nextLine();//吃掉回车，否则用户名输入跟密码输入会一块显示  </span><br><span class="line">            System.out.print(&quot;请输入用户名:&quot;);  </span><br><span class="line">            String name=in.nextLine();  </span><br><span class="line">            user.setUname(name);  </span><br><span class="line">            System.out.print(&quot;请输入密码:&quot;);  </span><br><span class="line">            String password=in.nextLine();  </span><br><span class="line">            user.setUpassword(password);  </span><br><span class="line">            commandTransfer.setCmd(&quot;login&quot;);//设置命令的cmd值  </span><br><span class="line">            commandTransfer.setData(user);//设置命令的data值  </span><br><span class="line">              </span><br><span class="line">            try &#123;  </span><br><span class="line">                socket=new Socket(&quot;127.0.0.1&quot;, 8888);  </span><br><span class="line">                sendData(commandTransfer);//将数据发送到服务器  </span><br><span class="line">                commandTransfer=getDate();//获取服务器返回的数据  </span><br><span class="line">                System.out.println(commandTransfer.getResult());//输出显示结果  </span><br><span class="line">                System.out.println(&quot;***************************&quot;);  </span><br><span class="line">                if(commandTransfer.isFlag())&#123;  </span><br><span class="line">                    break;//如果登录成功则不再重复登录  </span><br><span class="line">                &#125;else&#123;  </span><br><span class="line">                    System.out.println(&quot;请重新登录！&quot;);  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125; catch (IOException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;finally &#123;  </span><br><span class="line">                closeAll();//结束本次socket通信  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        clientUploadFile();  </span><br><span class="line">    &#125;  </span><br><span class="line">    //用户注册  </span><br><span class="line">    private void clientRegister() &#123;  </span><br><span class="line">        in.nextLine();//同上，吃回车  </span><br><span class="line">        User user=new User();  </span><br><span class="line">        CommandTransfer commandTransfer=new CommandTransfer();  </span><br><span class="line">        while (true) &#123;  </span><br><span class="line">            System.out.println(&quot;请输入用户名：&quot;);  </span><br><span class="line">            String name=in.nextLine();  </span><br><span class="line">            user.setUname(name);  </span><br><span class="line">            System.out.println(&quot;请输入密码：&quot;);  </span><br><span class="line">            String password=in.nextLine();  </span><br><span class="line">            System.out.println(&quot;请再次输入密码：&quot;);  </span><br><span class="line">            String repassword=in.nextLine();  </span><br><span class="line">            if (!password.equals(repassword))&#123;  </span><br><span class="line">                System.out.println(&quot;两次密码不一样！&quot;);  </span><br><span class="line">                continue;  </span><br><span class="line">            &#125;  </span><br><span class="line">            user.setUpassword(password);  </span><br><span class="line">            commandTransfer.setCmd(&quot;register&quot;);  </span><br><span class="line">            commandTransfer.setData(user);  </span><br><span class="line">              </span><br><span class="line">            try &#123;  </span><br><span class="line">                socket=new Socket(&quot;127.0.0.1&quot;, 8888);  </span><br><span class="line">                sendData(commandTransfer);//将数据发送到服务器  </span><br><span class="line">                commandTransfer=getDate();//获取服务器返回的数据  </span><br><span class="line">                System.out.println(commandTransfer.getResult());//输出显示结果  </span><br><span class="line">                if (commandTransfer.isFlag())&#123;  </span><br><span class="line">                    clientLogin();//注册成功，跳到登录界面  </span><br><span class="line">                &#125;else&#123;  </span><br><span class="line">                    System.out.println(&quot;请重新注册！&quot;);  </span><br><span class="line">                    clientRegister();  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125; catch (IOException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;finally &#123;  </span><br><span class="line">                closeAll();//结束本次通信  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    //文件上传  </span><br><span class="line">    public void clientUploadFile()&#123;  </span><br><span class="line">        System.out.println(&quot;请输入上传文件的绝对路径(如e:\\imooc\\dog.jpg)&quot;);  </span><br><span class="line">        String path=in.nextLine();  </span><br><span class="line">        File file=null;  </span><br><span class="line">        FileInputStream fileInputStream=null;  </span><br><span class="line">        BufferedInputStream bufferedInputStream=null;  </span><br><span class="line">        String fname=path.substring(path.lastIndexOf(&quot;\\&quot;)+1);  </span><br><span class="line">          </span><br><span class="line">        try &#123;  </span><br><span class="line">            fileInputStream=new FileInputStream(path);  </span><br><span class="line">            byte []fcontent=new byte[fileInputStream.available()];  </span><br><span class="line">            bufferedInputStream=new BufferedInputStream(fileInputStream);  </span><br><span class="line">            bufferedInputStream.read(fcontent);  </span><br><span class="line">            file=new File(fname, fcontent);//初始化file实例  </span><br><span class="line">        &#125; catch (Exception e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;finally &#123;  </span><br><span class="line">            try &#123;  </span><br><span class="line">                bufferedInputStream.close();  </span><br><span class="line">            &#125; catch (IOException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        CommandTransfer commandTransfer=new CommandTransfer();  </span><br><span class="line">        commandTransfer.setCmd(&quot;uploadFile&quot;);  </span><br><span class="line">        commandTransfer.setData(file);  </span><br><span class="line">        try &#123;  </span><br><span class="line">            socket=new Socket(&quot;127.0.0.1&quot;, 8888);  </span><br><span class="line">            sendData(commandTransfer);  </span><br><span class="line">            commandTransfer=getDate();  </span><br><span class="line">            System.out.println(commandTransfer.getResult());  </span><br><span class="line">            if (commandTransfer.isFlag())&#123;  </span><br><span class="line">                showMenu();  </span><br><span class="line">            &#125;else&#123;  </span><br><span class="line">                System.out.println(&quot;请重新上传：&quot;);  </span><br><span class="line">                clientUploadFile();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; catch (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;finally &#123;  </span><br><span class="line">            closeAll();  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">    &#125;  </span><br><span class="line">    //关闭socket  </span><br><span class="line">    private void closeAll() &#123;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            socket.close();  </span><br><span class="line">        &#125; catch (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    //获取指令中数据  </span><br><span class="line">    private CommandTransfer getDate() &#123;  </span><br><span class="line">        CommandTransfer commandTransfer=null;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            InputStream inputStream=socket.getInputStream();  </span><br><span class="line">            ObjectInputStream objectInputStream=new ObjectInputStream(inputStream);  </span><br><span class="line">            commandTransfer=(CommandTransfer) objectInputStream.readObject();  </span><br><span class="line">        &#125; catch (IOException | ClassNotFoundException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">        return commandTransfer;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    //发送数据  </span><br><span class="line">    private void sendData(CommandTransfer commandTransfer) &#123;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            OutputStream outputStream=socket.getOutputStream();  </span><br><span class="line">            ObjectOutputStream objectOutputStream=new ObjectOutputStream(outputStream);  </span><br><span class="line">            objectOutputStream.writeObject(commandTransfer);  </span><br><span class="line">            objectOutputStream.flush();  </span><br><span class="line">          </span><br><span class="line">        &#125; catch (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommandTransfer类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public class CommandTransfer implements Serializable &#123;  </span><br><span class="line">    private static final long serialVersionUID = -1268912978480007796L;  </span><br><span class="line">      </span><br><span class="line">    private String cmd;//操作指令  </span><br><span class="line">    private Object data;//传输数据  </span><br><span class="line">    private boolean flag;//操作是否成功  </span><br><span class="line">    private String result;//返回结果  </span><br><span class="line">      </span><br><span class="line">    //创建get/set方法  </span><br><span class="line">    public String getCmd() &#123;  </span><br><span class="line">        return cmd;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public void setCmd(String cmd) &#123;  </span><br><span class="line">        this.cmd = cmd;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public Object getData() &#123;  </span><br><span class="line">        return data;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public void setData(Object data) &#123;  </span><br><span class="line">        this.data = data;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public boolean isFlag() &#123;  </span><br><span class="line">        return flag;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public void setFlag(boolean flag) &#123;  </span><br><span class="line">        this.flag = flag;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public String getResult() &#123;  </span><br><span class="line">        return result;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public void setResult(String result) &#123;  </span><br><span class="line">        this.result = result;  </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;慕课网Socket最后的项目，实现登录注册、文件上传。&lt;/p&gt;
&lt;p&gt;代码中用到了Socket，Mysql，JDBC, I/O等技术。&lt;/p&gt;
&lt;p&gt;参考视频中给出的部分代码，参考网上的一些博客，加上自己的一些联想所写出的，可能会出一些错误(目前自己运行并未出现，除了上传的文件过于大可能报错之外)。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://yoursite.com/categories/JavaSE/"/>
    
    
      <category term="Socket Java" scheme="http://yoursite.com/tags/Socket-Java/"/>
    
  </entry>
  
  <entry>
    <title>Sublime text3配置Java环境</title>
    <link href="http://yoursite.com/2018/01/24/sublime-text3%E9%85%8D%E7%BD%AEjava%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/01/24/sublime-text3配置java环境/</id>
    <published>2018-01-23T16:00:00.000Z</published>
    <updated>2018-04-12T02:16:45.266Z</updated>
    
    <content type="html"><![CDATA[<p>当jdk和sublime都安装完以后就可以进行下面的步骤了：</p><p>一、新建runJava.bat文件</p><a id="more"></a><p>输入下面的内容，保存为runJava.bat文件。</p><p>@ECHO OFF<br>cd %~dp1<br>ECHO Compiling %~nx1……<br>IF EXIST %~n1.class (<br>DEL %~n1.class<br>)<br>javac %~nx1<br>IF EXIST %~n1.class (<br>ECHO ———OUTPUT———<br>java %~n1<br>)<br>将这个文件复制到JDK的bin目录下</p><p>二、修改JavaC.sublime-build文件</p><p>在安装目录(E:\Sublime Text 3\Packages)找到Java.sublime-package，解压找到JavaC.sublime-build文件按照如下修改：</p><p>{<br>“shell_cmd”: “runJava.bat \”$file\””,<br>“file_regex”: “^(…<em>?):([0-9]</em>):?([0-9]*)”,<br>“selector”: “source.java”,<br>“encoding”: “GBK”<br>}</p><p>三、java代码路径添加到CLASSPATH里面去<br>假设java类都放在E:\Application\sublime\workspace\java下的，添加CLASSPATH变量E:\Application\sublime\workspace\java;</p><p>经过上面的配置过后，我们发现能够正常编译和运行java代码了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当jdk和sublime都安装完以后就可以进行下面的步骤了：&lt;/p&gt;
&lt;p&gt;一、新建runJava.bat文件&lt;/p&gt;
    
    </summary>
    
      <category term="Sublime" scheme="http://yoursite.com/categories/Sublime/"/>
    
    
      <category term="Sublime Java" scheme="http://yoursite.com/tags/Sublime-Java/"/>
    
  </entry>
  
  <entry>
    <title>二叉树知前序中序求原二叉树</title>
    <link href="http://yoursite.com/2018/01/24/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9F%A5%E5%89%8D%E5%BA%8F%E4%B8%AD%E5%BA%8F%E6%B1%82%E5%8E%9F%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://yoursite.com/2018/01/24/二叉树知前序中序求原二叉树/</id>
    <published>2018-01-23T16:00:00.000Z</published>
    <updated>2018-04-12T14:21:49.853Z</updated>
    
    <content type="html"><![CDATA[<p>问题：<br>    输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。<br>假设输入的前序遍历和中序遍历的结果中都不含重复的数字。<br>例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for binary tree</span><br><span class="line"> * public class TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode left;</span><br><span class="line"> *     TreeNode right;</span><br><span class="line"> *     TreeNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> *</span><br><span class="line"> * 前序1，2，4，7，3，5，6，8；中序：4，7，2，1，5，3，8，6</span><br><span class="line"> * 前序中的1为此二叉树的根，所以根据中序可得1左边的节点为4，7，2；右边的节点为5，3，8，6</span><br><span class="line"> * 在根据前序2，4，7；中序4，7，2可得：2左边的节点为4，7；没有右边的节点</span><br><span class="line"> * 以此类推，可得到此二叉树</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">public class Solution &#123;</span><br><span class="line">     public TreeNode reConstructBinaryTree(int [] pre,int [] in) &#123;//传入前序，中序</span><br><span class="line">        TreeNode tn=myTree(pre,0,pre.length-1,in,0,in.length-1);//接收此二叉树</span><br><span class="line">        return tn;</span><br><span class="line">    &#125;</span><br><span class="line">    public TreeNode myTree(int[] pre, int startP, int endP, int[] in, int startI, int endI)&#123;</span><br><span class="line">        //参数依次为：前序，开始位置，结束位置；后序，开始位置，结束位置</span><br><span class="line">        if (startP&gt;endP||startI&gt;endI)&#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        TreeNode tree=new TreeNode(pre[startP]);</span><br><span class="line">        //循环可获得上述所分析得到的前序中的一段对应中序的一段，然后递归在分析</span><br><span class="line">  前序开始位置结束位置，后序开始位置结束位置规律可通过模拟找出,这个应该是这里面最难的</span><br><span class="line">        for (int i=0;i&lt;=endI;i++)&#123;</span><br><span class="line">            if (pre[startP]==in[i])&#123;//找到前序的某一个节点对应中序的某一个节点，然后开始分段</span><br><span class="line">                tree.left=myTree(pre, startP+1, startP+i-startI, in,startI,i-1);</span><br><span class="line">                tree.right=myTree(pre, startP+i-startI+1, endP, in, i+1, endI);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return tree;//返回此二叉树</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;问题：&lt;br&gt;    输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。&lt;br&gt;假设输入的前序遍历和中序遍历的结果中都不含重复的数字。&lt;br&gt;例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。&lt;/p&gt;
    
    </summary>
    
      <category term="剑指Offer" scheme="http://yoursite.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="二叉树" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Java集合ArrayList的内部实现</title>
    <link href="http://yoursite.com/2017/06/04/Java%E9%9B%86%E5%90%88ArrayList%E7%9A%84%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2017/06/04/Java集合ArrayList的内部实现/</id>
    <published>2017-06-03T16:00:00.000Z</published>
    <updated>2018-04-12T00:38:07.771Z</updated>
    
    <content type="html"><![CDATA[<p>1、定义初始长度、定义一个可变长度、定义一个数组；</p><p>2、初始：数组长度为0，可变长度为0</p><p>3、有一个改变长度的方法，防溢出，防不足</p><p>4、未实现Iterable接口<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">public  class MyList &lt;AnyType&gt; &#123;  </span><br><span class="line">      </span><br><span class="line">    private int theSize;//记录数组的长度  </span><br><span class="line">    private AnyType [] theItems;//可变数组，保留数据  </span><br><span class="line">      </span><br><span class="line">    private void doClear()&#123;//初始化数组，清空链表  </span><br><span class="line">        theSize=0;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public MyList()&#123;//构造方法，初始化数组  </span><br><span class="line">        doClear();  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void clear()&#123;//外部可调用的清空方法  </span><br><span class="line">        doClear();  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public int size()&#123;//获取长度  </span><br><span class="line">        return theSize;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public boolean isEmpty()&#123;//判断是否为空  </span><br><span class="line">        return theSize==0;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void trimTosize()&#123;//将此 ArrayList 实例的容量调整为列表的当前大小。  </span><br><span class="line">        ensureCapacity(size());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    public AnyType get(int idx)&#123;//获取某个位置上的值  </span><br><span class="line">        if (idx&lt;0||idx&gt;=size())  </span><br><span class="line">            throw new ArrayIndexOutOfBoundsException();  </span><br><span class="line">        return theItems[idx];  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public AnyType set(int idx,AnyType newVal)&#123;//修改指定位置上的值  </span><br><span class="line">        if (idx&lt;0||idx&gt;=size())  </span><br><span class="line">            throw new ArrayIndexOutOfBoundsException();  </span><br><span class="line">        AnyType old=theItems[idx];  </span><br><span class="line">        theItems[idx]=newVal;  </span><br><span class="line">        return old;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void ensureCapacity(int newCapacity) &#123;//增加数组的长度  </span><br><span class="line">        if (newCapacity&lt;theSize)  </span><br><span class="line">            return;  </span><br><span class="line">        AnyType []old=theItems;//将原始数组中的值保存  </span><br><span class="line">        theItems=(AnyType[])new Object[newCapacity];  </span><br><span class="line">        for (int i=0;i&lt;size();i++)  </span><br><span class="line">            theItems[i]=old[i];  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public boolean add(AnyType x)&#123;//在末尾添加数值  </span><br><span class="line">        add(size(),x);  </span><br><span class="line">        return true;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public void add(int idx,AnyType x)&#123;//在指定位置添加数值  </span><br><span class="line">        if (theItems.length==size())  </span><br><span class="line">            ensureCapacity(size()*2+1);  </span><br><span class="line">        for (int i=theSize;i&gt;idx;i--)&#123;  </span><br><span class="line">            theItems[i]=theItems[i-1];  </span><br><span class="line">        &#125;  </span><br><span class="line">        theItems[idx]=x;  </span><br><span class="line">        theSize++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    public AnyType remove(int idx)&#123;//删除指定位置上的值  </span><br><span class="line">        AnyType removedItem=theItems[idx];  </span><br><span class="line">        for (int i=idx;i&lt;size()-1;i++)&#123;  </span><br><span class="line">            theItems[i]=theItems[i+1];  </span><br><span class="line">        &#125;  </span><br><span class="line">        theSize--;  </span><br><span class="line">        return removedItem;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、定义初始长度、定义一个可变长度、定义一个数组；&lt;/p&gt;
&lt;p&gt;2、初始：数组长度为0，可变长度为0&lt;/p&gt;
&lt;p&gt;3、有一个改变长度的方法，防溢出，防不足&lt;/p&gt;
&lt;p&gt;4、未实现Iterable接口&lt;br&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://yoursite.com/categories/JavaSE/"/>
    
    
      <category term="ArrayList" scheme="http://yoursite.com/tags/ArrayList/"/>
    
  </entry>
  
  <entry>
    <title>Java排序中的自定义比较器</title>
    <link href="http://yoursite.com/2017/05/26/java%E6%AF%94%E8%BE%83%E5%99%A8/"/>
    <id>http://yoursite.com/2017/05/26/java比较器/</id>
    <published>2017-05-25T16:00:00.000Z</published>
    <updated>2018-04-12T00:45:56.504Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个类实现Comparator接口</p><p>在sort()方法中调用此类</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public class Comp &#123;</span><br><span class="line"></span><br><span class="line">int a;</span><br><span class="line">int b;</span><br><span class="line">//构造函数</span><br><span class="line">public Comp(int a, int b) &#123;</span><br><span class="line">this.a=a;</span><br><span class="line">this.b=b;</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//创建对象数组</span><br><span class="line">Comp []comp=new Comp[]&#123;new Comp(1,3),new Comp(2, 2),new Comp(0, 4)&#125;;</span><br><span class="line">//调用比较器</span><br><span class="line">Arrays.sort(comp,new A());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//创建比较器A，A为按a的升序排序</span><br><span class="line">class A implements Comparator&lt;Comp&gt;&#123;</span><br><span class="line"></span><br><span class="line">public int compare(Comp comp1,Comp comp2) &#123;</span><br><span class="line">return comp1.a-comp2.a;//按a的升序</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;创建一个类实现Comparator接口&lt;/p&gt;
&lt;p&gt;在sort()方法中调用此类&lt;/p&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://yoursite.com/categories/JavaSE/"/>
    
    
      <category term="Comparator" scheme="http://yoursite.com/tags/Comparator/"/>
    
  </entry>
  
</feed>
